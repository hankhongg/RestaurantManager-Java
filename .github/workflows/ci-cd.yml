name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Build with Maven
      run: |
        cd frontend
        mvn clean package -DskipTests
        cd ../backend
        mvn clean package -DskipTests
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Verify Docker Login
      run: |
        docker info
        echo "Successfully logged in to DockerHub as ${{ secrets.DOCKERHUB_USERNAME }}"
    
    - name: Build Docker images
      run: |
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/restaurant-frontend:latest ./frontend
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/restaurant-backend:latest ./backend
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: '${{ secrets.DOCKERHUB_USERNAME }}/restaurant-frontend:latest,${{ secrets.DOCKERHUB_USERNAME }}/restaurant-backend:latest'
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'
    
    - name: Run Snyk to check for vulnerabilities
      uses: snyk/actions/docker@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        image: '${{ secrets.DOCKERHUB_USERNAME }}/restaurant-frontend:latest'
        args: --severity-threshold=high
    
    - name: Run Snyk to check for vulnerabilities (Backend)
      uses: snyk/actions/docker@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        image: '${{ secrets.DOCKERHUB_USERNAME }}/restaurant-backend:latest'
        args: --severity-threshold=high
    
    - name: Push Docker images
      if: success()
      run: |
        echo "Pushing images to DockerHub..."
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/restaurant-frontend:latest
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/restaurant-backend:latest
        echo "Successfully pushed images to DockerHub" 